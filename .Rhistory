dropag.tree<-keep.tip(mytree3, dropme)
dropag.tree<-drop.tip(mytree3, dropme)
dropag.tree<-drop.tip(mytree3$tip.label, dropme)
str(mytree3)
View(agg_spp)
View(mytips)
View(dropme)
str(mytips)
str(dropme)
[!mytips %in% agg_spp$Species_name]
mytips[!mytips %in% agg_spp$Species_name]
mytips[mytips[!mytips %in% agg_spp$Species_name]] <- NULL
mytips[!mytips %in% agg_spp$Species_name] <- NULL
mytips
str(mytips)
dropag.tree<-drop.tip(mytree3, mytips)
dropag.tree<-drop.tip(mytree3, mytips)
mytips<-as.list(mytree3$tip.label)
dropme<-mytips[!mytips %in% agg_spp$Species_name]
dropag.tree<-drop.tip(mytree3, dropme)
dropme
mytips
library(ape)
library(phytools)
library(picante)
out2 <- table(agg_hosts)
mytree3 <- read.tree(file = "~/Downloads/PhylogeneticResources/Vascular_Plants_rooted.dated.tre")
mytree3 <- read.tree(file = "~/Documents/GitHub/Wine-Grape-Disease/Zanne_et_al_2013/Vascular_Plants_rooted.dated.tre")
pd(out2, mytree2, include.root=TRUE)
pd(out2, mytree3, include.root=TRUE)
mytips<-mytree3$tip.label
dropme<-mytips[!mytips %in% agg_spp$Species_name]
dropag.tree<-drop.tip(mytree3, dropme)
View(dropag.tree)
phydist <- cophenetic(dropag.tree)
ses.mpd.result <- ses.mpd(out2, phydist, null.model="taxa.labels",
+                           abundance.weighted=FALSE, runs=99))
ses.mpd.result <- ses.mpd(out2, phydist, null.model = taxa.labels, abundance.weighted = FALSE, runs = 99)
ses.mpd.result <- ses.mpd(out2, phydist)
phydist
View(agg_hosts)
View(agg_spp)
mytips<-mytree3$tip.label
dropme<-mytips[!mytips %in% out2]
dropag.tree<-drop.tip(mytree3, dropme)
mytips<-mytree3$tip.label
dropme<-mytips[!mytips %in% agg_hosts$agg_list]
dropag.tree<-drop.tip(mytree3, dropme)
phydist <- cophenetic(dropag.tree)
ses.mpd.result <- ses.mpd(out2, phydist)
out2
dropme
mytips
dropag.tree<-drop.tip(mytree3, dropme)
phydist <- cophenetic(dropag.tree)
ses.mpd.result <- ses.mpd(out2, phydist)
out2
ses.pd.result <- ses.pd(out2, phydist)
pd(out2, mytree3, include.root=TRUE)
mpd(out2, mytree3, include.root=TRUE)
mpd(out2, mytree3)
View(agg_hosts)
count(unique(agg_hosts$agg_list))
unique(agg_hosts$agg_list)
mytips<-mytree3$tip.label
mytips
dropme<-mytips[!mytips %in% agg_hosts$agg_list]
dropme
agg_spp$Species_name
mytips<-mytree3$tip.label
dropme<-mytips[!mytips %in% agg_spp$Species_name]
mytips
dropme
dropag.tree<-drop.tip(mytree3, dropme)
phydist <- cophenetic(dropag.tree)
phydist
unique(phydist)
mytips<-mytree3$tip.label
dropme<-mytips[!mytips %in% agg_spp$Species_name]
dropag.tree<-keep.tip(mytree3, dropme)
dropag.tree
mytips<-mytree3$tip.label
dropme<-mytips[!mytips %in% agg_spp$Species_name]
dropag.tree<-drop.tip(mytree3, dropme)
plot(dropag.tree)
dropag.tree
dropag.tree$tip.label
phydist <- cophenetic(dropag.tree)
phydist
ses.mpd.result <- ses.mpd(out2, phydist, null.model="taxa.labels", abundance.weighted=FALSE, runs=99)
pd(out2,dropag.tree, include.root=TRUE)
out2
dropag.tree$tip.label
agg_hosts$agg_list
write.csv(out2, file = "out2.csv")
dropag.tree
out2 <- as.data.frame(out2)
mytips<-mytree3$tip.label
mytips
dropme<-mytips[!mytips %in% out2$agg_list]
dropme
dropag.tree<-drop.tip(mytree3, dropme)
phydist <- cophenetic(dropag.tree)
ses.mpd.result <- ses.mpd(out2, phydist, null.model="taxa.labels", abundance.weighted=FALSE, runs=99)
out2 <- table(agg_hosts)
ses.mpd.result <- ses.mpd(out2, phydist, null.model="taxa.labels", abundance.weighted=FALSE, runs=99)
out2
phydist
dropag.tree$tip.label
mytips<-mytree3$tip.label
dropme<-mytips[!mytips %in% out2]
dropme
mytips
mytips<-mytree3$tip.label
dropme<-mytips[!mytips %in% agg_hosts$agg_list]
dropme
dropag.tree<-drop.tip(mytree3, dropme)
phydist <- cophenetic(dropag.tree)
out2 %in% dropag.tree$tip.label
out2 <- as.data.frame(out2)
out2$agg_list %in% dropag.tree$tip.label
unique(out2$agg_list) %in% unique(dropag.tree$tip.label)
order(unique(out2$agg_list) %in% unique(dropag.tree$tip.label))
order(unique(out2$agg_list) %in% order(unique(dropag.tree$tip.label)))
out2$agg_list[! (out2$agg_list %in% dropag.tree$tip.label)]
unique(out2$agg_list[! (out2$agg_list %in% dropag.tree$tip.label)])
gg<- out2$agg_list[! (out2$agg_list %in% dropag.tree$tip.label)])
gg<- out2$agg_list[! (out2$agg_list %in% dropag.tree$tip.label)]
gg
unique(gg)
str(gg)
str(unique(gg))
gg<- as.list(unique(gg))
gg
install.packages("compare")
library(compare)
com <- (out2$agg_list, dropag.tree$tip.label)
com <- (out2$agg_list , dropag.tree$tip.label, allowAll=TRUE)
com <- compare(out2$agg_list, dropag.tree$tip.label)
com
com$tM
com$tC
com <- compare(out2$agg_list, dropag.tree$tip.label, allowAll = FALSE)
com
com$tC
com$tM
com <- compare(out2$agg_list, dropag.tree$tip.label)
out2$agg_list[out2$agg_list %in% com$tC]
out2
out2new<- out2$agg_list[out2$agg_list %in% com$tC]
out2new
out2newtable <- table(out2new)
ses.mpd.result <- ses.mpd(out2newtable, phydist, null.model="taxa.labels", abundance.weighted=FALSE, runs=99)
mytips<-mytree3$tip.label
dropme<-mytips[!mytips %in% agg_hosts$agg_list]
dropag.tree<-drop.tip(mytree3, dropme)
phydist <- cophenetic(dropag.tree)
ses.mpd.result <- ses.mpd(out2newtable, phydist, null.model="taxa.labels", abundance.weighted=FALSE, runs=99)
out2newtable
out2new
str(out2new)
out2 <- table(agg_hosts)
str(agg_hosts)
str(out2)
haha<- as.data.frame.table(out2new)
haha<- table(out2new)
haha
out2new
write.csv(out2new, file = "out2new.csv")
out2 <- as.data.frame(out2)
out2new<- out2$agg_list[out2$agg_list %in% com$tC]
unique(out2new)
gg
library(readr)
out2_1 <- read_csv("out2.1.csv")
View(out2_1)
gg<- out2_1$agg_list[! (out2_1$agg_list %in% dropag.tree$tip.label)])
gg<- out2_1$agg_list[! (out2_1$agg_list %in% dropag.tree$tip.label)]
out2_1 <- as.dataframe(out2_1)
out2_1 <- as.data.frame(out2_1)
gg<- out2_1$agg_list[! (out2_1$agg_list %in% dropag.tree$tip.label)]
gg
out2_1$X2
gg<- out2_1[! (out2_1 %in% dropag.tree$tip.label)]
gg
unique(gg)
library(readr)
out2_1 <- read_csv("out2.1.csv")
View(out2_1)
out2_1 <- as.data.frame(out2_1)
gg<- out2_1[! (out2_1 %in% dropag.tree$tip.label)]
gg
com <- compare(out2_1, dropag.tree$tip.label)
com
com$tC
com$tM
com$transform
com$tMpartial
com$tCpartial
order(com$tCpartial)
gg<- out2$agg_list[! (out2$agg_list %in% dropag.tree$tip.label)]
gg
unique(gg)
library(readr)
out2_1 <- read_csv("out2.1.csv")
View(out2_1)
ses.mpd.result <- ses.mpd(out2_1, phydist, null.model="taxa.labels", abundance.weighted=FALSE, runs=99)
rlang::last_error()
str(out2)
out2 <- table(agg_hosts)
str(out2)
str(out2_1)
out2_1 <- as.table(out2_1)
out2_1 <- as.table.default(out2_1)
out2_1 <- data.frame(lapply(out2_1, as.character), stringsAsFactors = FALSE)
out2_1
out2_1 <- as.table(out2_1)
str(out2)
str(out2_1\)
str(out2_1)
write.csv(out2_1, file = "out2new.csv")
write.csv(out2_1, file = "out2new.csv")
library(readr)
out2new <- read_csv("out2new.csv", col_types = cols(col_character(),
X1_1 = col_character()))
View(out2new)
str(out2new)
library(dplyr)
out2_1 %>%
mutate_all(as.character)
str(out2_1)
out2_1 <- as.table(out2_1)
out2 <- table(agg_hosts)
pd(out2, mytree3, include.root=TRUE)
str(out2)
str(out2_1)
ses.mpd.result <- ses.mpd(out2_1, phydist, null.model="taxa.labels", abundance.weighted=FALSE, runs=99)
mytips<-mytree3$tip.label
dropme<-mytips[!mytips %in% agg_hosts$agg_list]
dropag.tree<-drop.tip(mytree3, dropme)
phydist <- cophenetic(dropag.tree)
ses.mpd.result <- ses.mpd(out2_1, phydist, null.model="taxa.labels", abundance.weighted=FALSE, runs=99)
library(readr)
Abisko_SheffieldDatabase <- read_csv("Documents/Ph.D/OSPREE/sep_data/Abisko_SheffieldDatabase.csv")
View(Abisko_SheffieldDatabase)
###Abisko_SheffieldDatabase
####Now, using reshape2, convert it from long to wide formatted data
Abisko_SheffieldDatabase <- read_csv("Documents/Ph.D/OSPREE/sep_data/Abisko_SheffieldDatabase.csv")
Abiskowide<- dcast(Abisko_SheffieldDatabase, LastName+FirstName+DatasetID+Dataset+SpeciesName+ObservationID~DataName, value.var = "OrigValueStr", na.rm=TRUE)
library(data.table)
library(tidyverse)
library(dplyr)
library(readr)
library(reshape2)
###Abisko_SheffieldDatabase
####Now, using reshape2, convert it from long to wide formatted data
Abisko_SheffieldDatabase <- read_csv("Documents/Ph.D/OSPREE/sep_data/Abisko_SheffieldDatabase.csv")
Abiskowide<- dcast(Abisko_SheffieldDatabase, LastName+FirstName+DatasetID+Dataset+SpeciesName+ObservationID~DataName, value.var = "OrigValueStr", na.rm=TRUE)
###There are 36 variables, many of which are weather eg rel humidity for ea month, sum of precip for ea month
##Subsetting just the trait/site data
tmp1<-Abiskowide[,c(1:7,13, 15, 19, 24:25)]
str(tmp1)
names(tmp1)
###Writing CSV
write.csv(tmp1, file="Abisko_SheffieldDatabase.csv", row.names = TRUE)
library(readr)
AllometricCoefficientsofAbovegroundTreeBiomass <- read_csv("Documents/Ph.D/OSPREE/sep_data/AllometricCoefficientsofAbovegroundTreeBiomass.csv")
View(AllometricCoefficientsofAbovegroundTreeBiomass)
#<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>#
###AllometricCoefficientsofAbovegroundtreebiomass
####Now, using reshape2, convert it from long to wide formatted data
AllometricCoefficientsofAbovegroundTreeBiomass <- read_csv("Documents/Ph.D/OSPREE/sep_data/AllometricCoefficientsofAbovegroundTreeBiomass.csv")
Allometricwide <- dcast(AllometricCoefficientsofAbovegroundTreeBiomass, LastName+FirstName+DatasetID+Dataset+SpeciesName+ObservationID~DataName, value.var = "OrigValueStr", na.rm=TRUE)
##Subsetting just the trait/site data
tmp2<- Allometricwide[,c(1:6, 10:13, 17)]
###Writing CSV
write.csv(tmp2, file="AllometricCoefficientsofAbovegroundTreeBiomass.csv", row.names = TRUE)
library(readr)
AltitudinalVicariantsSpain <- read_csv("Documents/Ph.D/OSPREE/sep_data/AltitudinalVicariantsSpain.csv")
View(AltitudinalVicariantsSpain)
#<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>#
###AltitudinalVicariantsSpain
####Now, using reshape2, convert it from long to wide formatted data
AltitudinalVicariantsSpain <- read_csv("Documents/Ph.D/OSPREE/sep_data/AltitudinalVicariantsSpain.csv")
Altitudinalwide <- dcast(AltitudinalVicariantsSpain, LastName+FirstName+DatasetID+Dataset+SpeciesName+ObservationID~DataName, value.var = "OrigValueStr", na.rm=TRUE)
##Subsetting just the trait/site data
tmp3<- Altitudinalwide[,c(1:7, 10:11, 15:17, 19)]
###Writing CSV
write.csv(tmp3, file="AltitudinalVicariantsSpain.csv", row.names = TRUE)
library(readr)
BAAD_abiomassandallometrydatabaseforwoodyplants <- read_csv("Documents/Ph.D/OSPREE/sep_data/BAAD_abiomassandallometrydatabaseforwoodyplants.csv")
View(BAAD_abiomassandallometrydatabaseforwoodyplants)
BAADwide <- dcast(BAAD_abiomassandallometrydatabaseforwoodyplants, LastName+FirstName+DatasetID+Dataset+SpeciesName+ObservationID~DataName, value.var = "OrigValueStr", na.rm=TRUE)
##Subsetting just the trait/site data
tmp4<- BAADwide[,c(1:7, 10:11, 15:17, 19)]
###Writing CSV
write.csv(tmp4, file="BAAD_abiomassandallometrydatabaseforwoodyplants.csv", row.names = TRUE)
library(readr)
Baccara_PlantTraitsofEuropeanForests <- read_csv("Documents/Ph.D/OSPREE/sep_data/Baccara-PlantTraitsofEuropeanForests.csv")
View(Baccara_PlantTraitsofEuropeanForests)
Baccarwide <- dcast(Baccara_PlantTraitsofEuropeanForests, LastName+FirstName+DatasetID+Dataset+SpeciesName+ObservationID~DataName, value.var = "OrigValueStr", na.rm=TRUE)
##Subsetting just the trait/site data
tmp5<- Baccarwide[,c(1:7, 10:11, 15:17, 19)]
Baccarwide <- dcast(Baccara_PlantTraitsofEuropeanForests, LastName+FirstName+DatasetID+Dataset+SpeciesName+ObservationID~DataName, value.var = "OrigValueStr", na.rm=TRUE)
##Subsetting just the trait/site data
tmp5<- Baccarwide[,c(1:7, 10:11, 15:17, 19)]
Baccarwide
str(Baccarwide)
##Subsetting just the trait/site data
tmp5<- Baccarwide[,c(1:5, 5:11)]
###Writing CSV
write.csv(tmp5, file="Baccara_PlantTraitsofEuropeanForests.csv", row.names = TRUE)
library(readr)
BASECO_afloristicandecologicaldatabaseofMediterraneanFrenchflora <- read_csv("Documents/Ph.D/OSPREE/sep_data/BASECO_afloristicandecologicaldatabaseofMediterraneanFrenchflora.csv")
View(BASECO_afloristicandecologicaldatabaseofMediterraneanFrenchflora)
BASECO_wide <- dcast(BASECO_afloristicandecologicaldatabaseofMediterraneanFrenchflora, LastName+FirstName+DatasetID+Dataset+SpeciesName+ObservationID~DataName, value.var = "OrigValueStr", na.rm=TRUE)
##Subsetting just the trait/site data
tmp6<- BASECO_wide[,c(1:5, 5:11)]
BASECO_wide
str(BASECO_wide)
##Subsetting just the trait/site data
tmp6<- BASECO_wide[,c(1:2, 5, 7)]
###Writing CSV
write.csv(tmp6, file="BASECO_afloristicandecologicaldatabaseofMediterraneanFrenchflora", row.names = TRUE)
files <- as.character(list.files(path="[Documents/Ph.D/OSPREE/sep_data]"))
readLines(paste("[Documents/Ph.D/OSPREE/sep_data]",.Platform$file.sep,files[1],sep=""))
files <- as.character(list.files(path="[Documents/Ph.D/OSPREE/sep_data/]"))
readLines(paste("[Documents/Ph.D/OSPREE/sep_data/]",.Platform$file.sep,files[1],sep=""))
files <- as.character(list.files(path="[~/Documents/Ph.D/OSPREE/sep_data]"))
readLines(paste("[~/Documents/Ph.D/OSPREE/sep_data]",.Platform$file.sep,files[1],sep=""))
files <- as.character(list.files(path="~/Documents/Ph.D/OSPREE/sep_data"))
readLines(paste("~/Documents/Ph.D/OSPREE/sep_data",.Platform$file.sep,files[1],sep=""))
files <- as.character(list.files(path="~/Documents/Ph.D/OSPREE/sep_data/"))
readLines(paste("~/Documents/Ph.D/OSPREE/sep_data/",.Platform$file.sep,files[1],sep=""))
library(readr)
BBB_AglobalBelowgroundBudBankdatabase <- read_csv("Documents/Ph.D/OSPREE/sep_data/BBB-AglobalBelowgroundBudBankdatabase.csv")
View(BBB_AglobalBelowgroundBudBankdatabase)
BBB_wide <- dcast(BBB_AglobalBelowgroundBudBankdatabase, LastName+FirstName+DatasetID+Dataset+SpeciesName+ObservationID~DataName, value.var = "OrigValueStr", na.rm=TRUE)
##Subsetting just the trait/site data
tmp7<- BBB_wide[,c(1:7, 10:11, 15:17, 19)]
str(BBB_wide)
##Subsetting just the trait/site data
tmp7<- BBB_wide[,c(1:2, 5, 10,12)]
###Writing CSV
write.csv(tmp7, file="BBB_AglobalBelowgroundBudBankdatabase", row.names = TRUE)
library(readr)
Biomassallocationinbeechandspruceseedlings <- read_csv("Documents/Ph.D/OSPREE/sep_data/Biomassallocationinbeechandspruceseedlings.csv")
View(Biomassallocationinbeechandspruceseedlings)
Biomass_wide <- dcast(Biomassallocationinbeechandspruceseedlings, LastName+FirstName+DatasetID+Dataset+SpeciesName+ObservationID~DataName, value.var = "OrigValueStr", na.rm=TRUE)
str(Biomass_wide)
##Subsetting just the trait/site data
tmp8<- Biomass_wide[,c(1:2, 5, 9, 11:12)]
###Writing CSV
write.csv(tmp8, file="Biomassallocationinbeechandspruceseedlings", row.names = TRUE)
library(readr)
BIOME_BGCParameterizationDatabase <- read_csv("Documents/Ph.D/OSPREE/sep_data/BIOME-BGCParameterizationDatabase.csv")
View(BIOME_BGCParameterizationDatabase)
Biome_wide <- dcast(BIOME_BGCParameterizationDatabase, LastName+FirstName+DatasetID+Dataset+SpeciesName+ObservationID~DataName, value.var = "OrigValueStr", na.rm=TRUE)
str(Biome_wide)
##Subsetting just the trait/site data
tmp9<- Biome_wide[,c(1:2, 5, 7:8)]
###Writing CSV
write.csv(tmp9, file="BIOME_BGCParameterizationDatabase", row.names = TRUE)
library(data.table)
setwd("~/Documents/Ph.D")
setwd("~/Documents/Ph.D/OSPREE/sep_data")
setwd("~/Documents/Ph.D/OSPREE/sep_data")
#create a list of the files from your target directory
file_list <- list.files(path="~/Documents/Ph.D/OSPREE/sep_data)
#initiate a blank data frame, each iteration of the loop will append the data from the given file to this variable
dataset <- data.frame()
#had to specify columns to get rid of the total column
for (i in 1:length(file_list)){
temp_data <- fread(file_list[i], stringsAsFactors = F) #read in files using the fread function from the data.table package
dataset <- rbindlist(list(dataset, temp_data), use.names = T) #for each iteration, bind the new data to the building dataset
}
#create a list of the files from your target directory
file_list <- list.files(path="~/Documents/Ph.D/OSPREE/sep_data)
dataset <- data.frame()
for (i in 1:length(file_list)){
temp_data <- fread(file_list[i], stringsAsFactors = F)
dataset <- rbindlist(list(dataset, temp_data), use.names = T)
}
#create a list of the files from your target directory
file_list <- list.files(path="~/Documents/Ph.D/OSPREE/sep_data)
dataset <- data.frame()
for (i in 1:length(file_list)){
temp_data <- fread(file_list[i], stringsAsFactors = F)
dataset <- rbindlist(list(dataset, temp_data), use.names = T)
}
#create a list of the files from your target directory
file_list <- list.files(path="~/Documents/Ph.D/OSPREE/sep_data)
dataset <- data.frame()
for (i in 1:length(file_list)){
temp_data <- fread(file_list[i], stringsAsFactors = F)
dataset <- rbindlist(list(dataset, temp_data), use.names = T)
}
}
#create a list of the files from your target directory
file_list <- list.files(path="~/Documents/Ph.D/OSPREE/sep_data/)
dataset <- data.frame()
for (i in 1:length(file_list)){
temp_data <- fread(file_list[i], stringsAsFactors = F)
dataset <- rbindlist(list(dataset, temp_data), use.names = T)
}
}
library(readr)
BIOTREETraitShadeExperiment <- read_csv("BIOTREETraitShadeExperiment.csv")
View(BIOTREETraitShadeExperiment)
BIOTREE_wide <- dcast(BIOTREETraitShadeExperiment, LastName+FirstName+DatasetID+Dataset+SpeciesName+ObservationID~DataName, value.var = "OrigValueStr", na.rm=TRUE)
#<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>#
BIOTREETraitShadeExperiment <- read_csv("BIOTREETraitShadeExperiment.csv")
BIOTREE_wide <- dcast(BIOTREETraitShadeExperiment, LastName+FirstName+DatasetID+Dataset+SpeciesName+ObservationID~DataName, value.var = "OrigValueStr", na.rm=TRUE)
str(BIOTREE_wide)
##Subsetting just the trait/site data
tmp10<- BIOTREE_wide[,c(1:7, 10:11, 15:17, 19)]
###Writing CSV
write.csv(tmp10, file="BIOTREETraitShadeExperiment", row.names = TRUE)
out2_1
dropag.tree
data("phylocom")
phylocom$sample
str(phylocom$sample)
str(out2_1)
library(readr)
out2_1 <- read_csv("~/out2.1.csv", col_types = cols(X1 = col_character()))
View(out2_1)
ses.mpd.result <- ses.mpd(out2_1, phydist, null.model="taxa.labels", abundance.weighted=FALSE, runs=99)
out2_1 <- as.vector(out2_1)
ses.mpd.result <- ses.mpd(out2_1, phydist, null.model="taxa.labels", abundance.weighted=FALSE, runs=99)
rlang::last_error()
str(out2_1)
out2_1 <- as.table(out2_1)
out2 <- table(agg_hosts)
out2
str(agg_hosts)
agg_hosts
str(out2_1)
out2_1 <- as.data.frame(out2_1)
out2_1$X1 <- as.factor(out2_1$X1)
out2_1[,1]
out2_1[1,]
out2_1[1,] <- as.factor(out2_1[1,])
out2_1
str(out2)
str(out2_1)
ses.mpd.result <- ses.mpd(out2_1, phydist, null.model="taxa.labels", abundance.weighted=FALSE, runs=99)
str(phylocom$sample)
out2_1 %>%
mutate_all(as.character)
str(out2_1)
str(phylocom$sample)
out2_1 <- as.numeric(out2_1)
out2_1[1]
out2_1 <- na.omit(out2_1)
out2_1[1]
ses.mpd.result <- ses.mpd(out2_1, phydist, null.model="taxa.labels", abundance.weighted=FALSE, runs=99)
library(reshape2)
dcast(out2_1, out2_1$X1~out2_1[2:453])
out2_1
setwd("~/Documents/Ph.D")
setwd("~/Documents/Ph.D")
library(ape)
library(picante)
tree<- read.tree (file = "~/Documents/GitHub/Wine-Grape-Disease/Zanne_et_al_2013/Vascular_Plants_rooted.dated.tre")
library(readxl)
pathogensandhosts <- read_excel("~/Documents/GitHub/Wine-Grape-Disease/data/pathogensandhosts.xlsx")
View(pathogensandhosts)
library(readr)
agricultural_species <- read_csv("~/Documents/GitHub/Wine-Grape-Disease/data/agricultural_species.csv")
View(agricultural_species)
setwd("~/Documents/GitHub/Wine-Grape-Disease")
pathogens <- read_excel("~/Documents/GitHub/Wine-Grape-Disease/data/pathogensandhosts.xlsx")
agg_spp <- read_csv("~/Documents/GitHub/Wine-Grape-Disease/data/agricultural_species.csv")
agg.dat <- agg_spp
mytips <- tree$tip.label
dropme <- mytips[!mytips %in% agg.dat$Species_name]
ag.tree <- drop.tip(tree, dropme)
#get a list of the pathogens
path<-unique(pathogens$Pathogen)
#creat an empty variable to strore final results
agg_hosts<-NULL
#start a loop to extract host species list for each pathogen
for (i in 1:length(path)){
#subset the data for pathogen[i]
my_hosts<-subset(pathogens, Pathogen == path[i])
#format host names nicely
host_names<-my_hosts$Host
#creat a temporary variable to store agricultural hosts
agg_list<-NULL
#start a loop to run through recorded hosts and macth them to agricultural species
for (n in 1:length(host_names)){
#if statement extracts all agricultural species in that genus if a species name is not given
#(assumes pathohen infects entire genus!)
if (pathogens$host_species[n] == "sp."){
host.to.add<-subset(agg_spp, genus == pathogens$host_genus[n])[,"Species_name"]
} else {
#if a species name is given##### - see if it matches to a species in the aggricultural crop list
host.to.add<-host_names[n]#agg_spp$Species_name[agg_spp$Species_name %in% host_names[n]]
}#end if
#store crops species list for pathoigen[i] (first checking whether at elast one crop species was returned)
if (length(host.to.add)>0){
agg_list<-c(agg_list, host.to.add)
}
}#end for n
#save output in agg_hosts with a column for the pathogen and a column for the aggricultural host species
agg_hosts<-rbind(agg_hosts,(cbind(rep(path[i], length(agg_list)), agg_list)))
}#end for i
#Remove duplicates
path.data<-as.data.frame(agg_hosts)[duplicated(as.data.frame(agg_hosts))==F,]
path.data.abund<-data.frame(path.data[,1], rep(1, length(path.data[,1])), path.data[,2],stringsAsFactors=FALSE)
path.matrix<-sample2matrix(path.data.abund)
