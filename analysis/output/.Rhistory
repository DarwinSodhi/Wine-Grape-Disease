color<- ggplot(mntd_all_sp_in_genus, aes(x = Type, y =mpd.obs.z )) +
geom_point(size = 1, position = position_jitter(height = 0.05, width = 0.1))
color + geom_point(aes(x=1, y= -2.84), colour= "red") +
geom_point(aes(x=2, y= -3.25), colour= "red") +
geom_point(aes(x=3, y= -3.07), colour= "red") +
geom_point(aes(x=4, y= -2.73), colour= "red") +
geom_point(aes(x=5, y= -3.36), colour= "red") +
geom_errorbar(data= cloud1, aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(0.05))
#Vizulizing Data
color<- ggplot(mntd_all_sp_in_genus, aes(x = Type, y =mntd.obs.z )) +
geom_point(size = 1, position = position_jitter(height = 0.05, width = 0.1))
color
color + geom_point(aes(x=1, y= -2.84), colour= "red") +
geom_point(aes(x=2, y= -3.25), colour= "red") +
geom_point(aes(x=3, y= -3.07), colour= "red") +
geom_point(aes(x=4, y= -2.73), colour= "red") +
geom_point(aes(x=5, y= -3.36), colour= "red") +
geom_errorbar(data= cloud1, aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(0.05))
color + geom_point(aes(x=1, y= -2.84), colour= "red") +
geom_point(aes(x=2, y= -3.25), colour= "red") +
geom_point(aes(x=3, y= -3.07), colour= "red") +
geom_point(aes(x=4, y= -2.73), colour= "red") +
geom_point(aes(x=5, y= -3.36), colour= "red") +
geom_errorbar(data= cloud3, aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(0.05))
post4<- stan_glm(mntd.obs.z~ Type, data = mntd_single_sp_in_genus,
family = gaussian(link="identity"),)
mntd_single_sp_in_genus <- read_csv("mntd.single.sp.in.genus.csv")
summary(post4)
post4<- stan_glm(mntd.obs.z~ Type, data = mntd_single_sp_in_genus,
family = gaussian(link="identity"),)
summary(post4)
fits4 <- post4 %>%
as_data_frame %>%
rename(intercept = `(Intercept)`) %>%
select(-sigma)
path <- unique(names(fits4))
dose4 <- (matrix(NA, nrow= nrow(fits4), ncol = ncol(fits4)))
for (n in 1:length(path)){
dose4[,1]<- as.matrix(fits4[,1] * 1)
dose4[,n]<- as.matrix(fits4[,1] + fits3[,n])
}
dose4 <- as.data.frame(dose4)
dose4 <- dose4 %>%
rename(
intercept = V1,
TypeF = V2,
TypeN = V3,
TypeP = V4,
TypeV = V5
)
prob_lwr <- .10
prob_upr <- .90
path <- unique(names(dose4))
PND2 <- (matrix(NA, nrow= 3, ncol = ncol(dose4)))
for (n in 1:length(path)){
PND2[1,n]<- as.matrix(median(dose4[,n]))
PND2[2,n] <- as.matrix(quantile(dose4[,n], prob_lwr))
PND2[3,n]<- as.matrix(quantile(dose4[,n], prob_upr))
}
PND2 <- as.data.frame(PND2)
PND2 <- PND2 %>%
rename(
B = V1,
F = V2,
N = V3,
P = V4,
V = V5
)
View(PND2)
PND2 <- t(PND2)
PND2 <- as.data.frame(PND2)
PND2 <- rownames_to_column(PND2)
colnames(PND2)[1]<- "Type"
colnames(PND2)[2] <- "median"
colnames(PND2)[3] <- "lower"
colnames(PND2)[4] <- "upper"
cloud4<- full_join(mntd_single_sp_in_genus, PND, by= "Type")
PND2 <- t(PND2)
PND2 <- as.data.frame(PND2)
PND2 <- rownames_to_column(PND2)
colnames(PND2)[1]<- "Type"
colnames(PND2)[2] <- "median"
colnames(PND2)[3] <- "lower"
colnames(PND2)[4] <- "upper"
cloud4<- full_join(mntd_single_sp_in_genus, PND, by= "Type")
View(cloud4)
cloud4<- full_join(mntd_single_sp_in_genus, PND2, by= "Type")
View(cloud4)
PND2 <- t(PND2)
PND2 <- as.data.frame(PND2)
PND2 <- rownames_to_column(PND2)
colnames(PND2)[1]<- "Type"
colnames(PND2)[2] <- "median"
colnames(PND2)[3] <- "lower"
colnames(PND2)[4] <- "upper"
cloud4<- full_join(mntd_single_sp_in_genus, PND2, by= "Type")
View(cloud4)
View(PND2)
path <- unique(names(dose4))
PND2 <- (matrix(NA, nrow= 3, ncol = ncol(dose4)))
for (n in 1:length(path)){
PND2[1,n]<- as.matrix(median(dose4[,n]))
PND2[2,n] <- as.matrix(quantile(dose4[,n], prob_lwr))
PND2[3,n]<- as.matrix(quantile(dose4[,n], prob_upr))
}
PND2 <- as.data.frame(PND2)
PND2 <- PND2 %>%
rename(
B = V1,
F = V2,
N = V3,
P = V4,
V = V5
)
View(PND2)
PND2 <- t(PND2)
PND2 <- as.data.frame(PND2)
View(PND2)
PND2 <- rownames_to_column(PND2)
colnames(PND2)[1]<- "Type"
colnames(PND2)[2] <- "median"
colnames(PND2)[3] <- "lower"
colnames(PND2)[4] <- "upper"
cloud4<- full_join(mntd_single_sp_in_genus, PND2, by= "Type")
View(cloud4)
#Vizulizing Data
MJ<- ggplot(mntd_single_sp_in_genus, aes(x = Type, y =mntd.obs.z )) +
geom_point(size = 1, position = position_jitter(height = 0.05, width = 0.1))
post4<- stan_glm(mntd.obs.z~ Type, data = mntd_single_sp_in_genus,
family = gaussian(link="identity"),)
summary(post4)
fits4 <- post4 %>%
as_data_frame %>%
rename(intercept = `(Intercept)`) %>%
select(-sigma)
path <- unique(names(fits4))
dose4 <- (matrix(NA, nrow= nrow(fits4), ncol = ncol(fits4)))
for (n in 1:length(path)){
dose4[,1]<- as.matrix(fits4[,1] * 1)
dose4[,n]<- as.matrix(fits4[,1] + fits4[,n])
}
dose4 <- as.data.frame(dose4)
dose4 <- dose4 %>%
rename(
intercept = V1,
TypeF = V2,
TypeN = V3,
TypeP = V4,
TypeV = V5
)
prob_lwr <- .10
prob_upr <- .90
path <- unique(names(dose4))
PND2 <- (matrix(NA, nrow= 3, ncol = ncol(dose4)))
for (n in 1:length(path)){
PND2[1,n]<- as.matrix(median(dose4[,n]))
PND2[2,n] <- as.matrix(quantile(dose4[,n], prob_lwr))
PND2[3,n]<- as.matrix(quantile(dose4[,n], prob_upr))
}
PND2 <- as.data.frame(PND2)
PND2 <- PND2 %>%
rename(
B = V1,
F = V2,
N = V3,
P = V4,
V = V5
)
PND2 <- t(PND2)
PND2 <- as.data.frame(PND2)
PND2 <- rownames_to_column(PND2)
colnames(PND2)[1]<- "Type"
colnames(PND2)[2] <- "median"
colnames(PND2)[3] <- "lower"
colnames(PND2)[4] <- "upper"
cloud4<- full_join(mntd_single_sp_in_genus, PND2, by= "Type")
View(cloud4)
#Vizulizing Data
MJ<- ggplot(mntd_single_sp_in_genus, aes(x = Type, y =mntd.obs.z )) +
geom_point(size = 1, position = position_jitter(height = 0.05, width = 0.1))
MJ + geom_point(aes(x=1, y= -2.23), colour= "red") +
geom_point(aes(x=2, y= -2.78), colour= "red") +
geom_point(aes(x=3, y= -1.59), colour= "red") +
geom_point(aes(x=4, y= -1.49), colour= "red") +
geom_point(aes(x=5, y= -2.67), colour= "red") +
geom_errorbar(data= cloud4, aes(ymin=lower, ymax=upper), width=.2,
position=position_dodge(0.05))
#Bayesian models for focal distance and impact
setwd("~/Documents/GitHub/Wine-Grape-Disease/analysis/output/") # setwd("~/Documents/git/projects/misc/darwin/winegrapedisease/Wine-Grape-Disease/analysis/output")
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
library(tidyverse)
library(dbplyr)
library(tidyr)
library(reshape2)
library(data.table)
library(tibble)
library(dplyr)
library(rstanarm)
library(loo)
library(shinystan)
#loading in datasets
focaldistance_onespecies <- read_csv("Focaldistanceonespecies.csv")
focaldistance_enitregenus <- read_csv("Focaldistanceentiregenus.csv")
View(focaldistance_enitregenus)
View(focaldistance_enitregenus)
calvin <- stan_glm(impact~ FPD, data = focaldistance_enitregenus,
family = gaussian(link="identity"),)
summary(calvin)
fits <- calvin %>%
as_data_frame %>%
rename(intercept = `(Intercept)`) %>%
select(-sigma)
View(fits)
plot(impact~FPD, data= focaldistance_enitregenus)
plot(impact~FPD+Type, data= focaldistance_enitregenus)
plot(impact~ses.FPD+Type, data= focaldistance_enitregenus)
plot(impact~SES.FPD+Type, data= focaldistance_enitregenus)
plot(impact~SES.FPD, data= focaldistance_enitregenus)
abline(lm(impact~SES.FPD, data= focaldistance_enitregenus))
summary(lm(impact~SES.FPD, data= focaldistance_enitregenus))
calvin <- stan_glm(impact~ SES.FPD, data = focaldistance_enitregenus,
family = gaussian(link="identity"),)
summary(calvin)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
setwd("~/Documents/GitHub/Wine-Grape-Disease/analysis/Scripts/")
library(ape)
library(picante)
library(tidyverse)
library(dbplyr)
library(data.table)
library(readr)
library(reshape2)
source("match_taxa.R")
zanne.tree<-read.tree(file = "~/Documents/GitHub/Wine-Grape-Disease/Zanne_et_al_2013/Vascular_Plants_rooted.dated.tre")
agg.dat<-read.csv("agricultural_species.csv")
mytips<-zanne.tree$tip.label
dropme<-mytips[!mytips %in% agg.dat$Species_name]
ag.tree<-drop.tip(zanne.tree, dropme)
tree<-ag.tree
#removes all irregular symbols from host_species
host_spp$host_species<- str_replace_all(host_spp$host_species, "[[:punct:]]", "")
#removes the "x" if it is the first character in the host_species column
host_spp$host_species<- gsub("^(×)", "", host_spp$host_species)
#removes "�" from host_species column
host_spp$host_species<- gsub("(�)$" ,"", host_spp$host_species)
#replaces all "sp" with "sp." in the host species column
host_spp$host_species[host_spp$host_species == "sp"] <- "sp."
#makes all capitals into lower case
host_spp$host_species<- tolower(host_spp$host_species)
#combines two columns and seperates them by a _
host_spp$Host = paste(host_spp$host_genus, host_spp$host_species, sep="_")
#adds "vitis_vinifera" to each unique pathogen
for (i in 1:49) {
host_spp <- add_row(host_spp,
Pathogen = unique(host_spp$Pathogen)[i],
host_genus = "Vitis",
host_species = "vinifera",
Host = "Vitis_vinifera")
}
#Read in dataframes
pathogens<-host_spp
agg_spp<-read.csv("agricultural_species.csv", stringsAsFactors=F)
#loading in datasets
mpd_all_sp_in_genus <- read_csv("mpd_all_sp_in_genus.csv")
#Figures for results
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
setwd("~/Documents/GitHub/Wine-Grape-Disease/figures/")
#loading in datasets
mpd_all_sp_in_genus <- read_csv("mpd_all_sp_in_genus.csv")
#loading in datasets
mpd_all_sp_in_genus <- read_csv("analysis/output/mpd_all_sp_in_genus.csv")
#Figures for results
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
setwd("~/Documents/GitHub/Wine-Grape-Disease/analysis/output/")
#loading in datasets
mpd_all_sp_in_genus <- read_csv("analysis/output/mpd_all_sp_in_genus.csv")
#loading in datasets
mpd_all_sp_in_genus <- read_csv("mpd_all_sp_in_genus.csv")
mpd_single_sp_in_genus <- read_csv("mpd.single.sp.in.genus.csv")
single.sp<-cbind(rep("single.species", length(mpd.single.sp.in.genus$mpd.obs.z)),mpd.single.sp.in.genus$mpd.obs.z)
single.sp<-cbind(rep("single.species", length(mpd_single_sp_in_genus$mpd.obs.z)),mpd_single_sp_in_genus$mpd.obs.z)
all.genus<-cbind(rep("all.genus", length(mpd_all_sp_in_genus$mpd.obs.z)),mpd_all_sp_in_genus$mpd.obs.z)
mpd.z<-as.data.frame(rbind(single.sp, all.genus), stringsAsFactors=FALSE)
boxplot(as.numeric(V2) ~ as.factor(V1), data=mpd.z, ylab = "SES.MPD", main = "Mean pairwise distances between hosts")
boxplot(as.numeric(V2) ~ as.factor(V1), data=mpd.z, ylab = "SES.MPD", main = "Mean pairwise distances between hosts")
par(c(1,1))
boxplot(as.numeric(V2) ~ as.factor(V1), data=mpd.z, ylab = "SES.MPD", main = "Mean pairwise distances between hosts")
par(mforw= c(1,1))
par(mfrow= c(1,1))
boxplot(as.numeric(V2) ~ as.factor(V1), data=mpd.z, ylab = "SES.MPD", main = "Mean pairwise distances between hosts")
abline(h=0, col=1, lty=2)
abline(h=0, col=2, lty=2)
pdf("~/Documents/GitHub/Wine-Grape-Disease/analysis/figures/Mean pairwise distances.pdf")
pdf("~/Documents/GitHub/Wine-Grape-Disease/figures/Mean pairwise distances.pdf")
par(mfrow= c(1,1))
boxplot(as.numeric(V2) ~ as.factor(V1), data=mpd.z, ylab = "SES.MPD", main = "Mean pairwise distances between hosts")
abline(h=0, col=2, lty=2)
dev.off()
#Figure 1
mntd<-cbind(rep("MNTD", length(mntd_all_sp_in_genus$mntd.obs.z)),mntd_all_sp_in_genus$mntd.obs.z)
mntd_all_sp_in_genus <- read_csv("mntd_all_sp_in_genus.csv")
mntd_single_sp_in_genus <- read_csv("mntd.single.sp.in.genus.csv")
#Figure 1
mntd<-cbind(rep("MNTD", length(mntd_all_sp_in_genus$mntd.obs.z)),mntd_all_sp_in_genus$mntd.obs.z)
mpd<-cbind(rep("MPD", length(mpd_all_sp_in_genus$mpd.obs.z)),mpd_all_sp_in_genus$mpd.obs.z)
phylomet<-as.data.frame(rbind(mntd, mpd), stringsAsFactors=FALSE)
par(mfrow= c(1,1))
boxplot(as.numeric(V2) ~ as.factor(V1), data=phylomet, ylab = "SES", main = "MNTD and MPD for Winegrape Pathogens")
abline(h=0, col=2, lty=2)
pdf("~/Documents/GitHub/Wine-Grape-Disease/figures/phylogenetic_metrics.pdf")
par(mfrow= c(1,1))
boxplot(as.numeric(V2) ~ as.factor(V1), data=phylomet, ylab = "SES", main = "MNTD and MPD for Winegrape Pathogens")
abline(h=0, col=2, lty=2)
dev.off()
#loading in datasets
focaldistance_onespecies <- read_csv("Focaldistanceonespecies.csv")
focaldistance_enitregenus <- read_csv("Focaldistanceentiregenus.csv")
str(focaldistance_enitregenus)
focaldistance_enitregenus$impact <- as.numeric(focaldistance_enitregenus$impact)
plot(impact~SES.FPD, data= focaldistance_enitregenus)
abline(lm(impact~SES.FPD, data= focaldistance_enitregenus))
####script to create light data for Ph.D.
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
setwd("~/Documents/GitHub/Coexistence-in-BC-Forests/Analyses/")
library(vegan)
library(tidyverse)
library(dbplyr)
library(tidyr)
library(reshape2)
library(data.table)
library(tibble)
library(dplyr)
library(ggplot2)
LiCordatafinal <- read_csv("input/LiCordatafinalpsp.csv")
LiCordata_adult <- LiCordatafinal[LiCordatafinal$Species != 'AMBIENT',]
LiCordata_adult1 <- LiCordatafinal[LiCordatafinal$Species == 'AMBIENT',]
LiCordata_adult <- LiCordata_adult[,c(1:403,441,450)]
LiCordata_adult[, c(3:403)] <- sapply(LiCordata_adult[, c(3:403)], as.numeric)
LiCordata_adult1 <- LiCordata_adult1[,c(1:403,441,450)]
LiCordata_adult1[, c(3:403)] <- sapply(LiCordata_adult1[, c(3:403)], as.numeric)
LiCordata_adult <- LiCordata_adult[order(LiCordata_adult$Time),]
LiCordata_adult <- LiCordata_adult[-54,]
#makes rowsname species names
rownames(LiCordata_adult) <- make.names(LiCordata_adult$Species, unique = TRUE)
#repeats each ambient reading three times in a new dataset
LiCordata_adult1 <- LiCordata_adult1 %>% slice(rep(1:n(), each = 3))
path <- unique(names(LiCordata_adult[,(3:403)]))
k2 <- (matrix(NA, nrow= nrow(LiCordata_adult[,(3:403)]), ncol = ncol(LiCordata_adult[,(3:403)])))
colnames(k2) <- colnames(LiCordata_adult[,(3:403)])
row.names(k2) <- rownames(LiCordata_adult)
for (n in 1:length(path)){
k2[,n]<- as.matrix(LiCordata_adult[,(3:403)][,n] - LiCordata_adult1[,(3:403)][,n])
}
k2<- melt(k2[,c(1:402)], id.vars = c("rowname"))
NMDS_RambspcPSPSFT3_2 <- read.csv("~/Documents/GitHub/Coexistence-in-BC-Forests/Analyses/input/NMDS_RambspcPSPSFT3_2.csv")
View(NMDS_RambspcPSPSFT3_2)
k2<- melt(k2[,c(1:402)], id.vars = c("rowname"))
####script to create light data for Ph.D.
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
setwd("~/Documents/GitHub/Coexistence-in-BC-Forests/Analyses/")
library(vegan)
library(tidyverse)
library(dbplyr)
library(tidyr)
library(reshape2)
library(data.table)
library(tibble)
library(dplyr)
library(ggplot2)
LiCordatafinal <- read_csv("input/LiCordatafinalpspspt.csv")
LiCordata_adult <- LiCordatafinal[LiCordatafinal$Species != 'AMBIENT',]
LiCordata_adult1 <- LiCordatafinal[LiCordatafinal$Species == 'AMBIENT',]
LiCordata_adult <- LiCordata_adult[,c(1:403,441,450)]
LiCordata_adult[, c(3:403)] <- sapply(LiCordata_adult[, c(3:403)], as.numeric)
LiCordata_adult1 <- LiCordata_adult1[,c(1:403,441,450)]
LiCordata_adult1[, c(3:403)] <- sapply(LiCordata_adult1[, c(3:403)], as.numeric)
LiCordata_adult <- LiCordata_adult[order(LiCordata_adult$Time),]
#makes rowsname species names
rownames(LiCordata_adult) <- make.names(LiCordata_adult$Species, unique = TRUE)
#repeats each ambient reading three times in a new dataset
LiCordata_adult1 <- LiCordata_adult1 %>% slice(rep(1:n(), each = 3))
path <- unique(names(LiCordata_adult[,(3:403)]))
k2 <- (matrix(NA, nrow= nrow(LiCordata_adult[,(3:403)]), ncol = ncol(LiCordata_adult[,(3:403)])))
colnames(k2) <- colnames(LiCordata_adult[,(3:403)])
row.names(k2) <- rownames(LiCordata_adult)
for (n in 1:length(path)){
k2[,n]<- as.matrix(LiCordata_adult[,(3:403)][,n] - LiCordata_adult1[,(3:403)][,n])
}
k2 <- as.data.frame(k2)
k2 <- rownames_to_column(k2)
View(k2)
k2<- melt(k2[,c(1:402)], id.vars = c("rowname"))
k2$species<-sub("^([[:alpha:]]*).*", "\\1", k2$rowname)
k2 <- k2[,-1]
str(k2)
k2$variable <- as.numeric(k2$variable)
str(k2)
View(k2)
k2<- melt(k2[,c(1:402)], id.vars = c("rowname"))
path <- unique(names(LiCordata_adult[,(3:403)]))
k2 <- (matrix(NA, nrow= nrow(LiCordata_adult[,(3:403)]), ncol = ncol(LiCordata_adult[,(3:403)])))
colnames(k2) <- colnames(LiCordata_adult[,(3:403)])
row.names(k2) <- rownames(LiCordata_adult)
for (n in 1:length(path)){
k2[,n]<- as.matrix(LiCordata_adult[,(3:403)][,n] - LiCordata_adult1[,(3:403)][,n])
}
k2 <- as.data.frame(k2)
k2 <- rownames_to_column(k2)
k2<- melt(k2[,c(1:402)], id.vars = c("rowname"))
k2$species<-sub("^([[:alpha:]]*).*", "\\1", k2$rowname)
k2 <- k2[,-1]
View(k2)
str(k2)
gsub("nm","", paste(k2$variable))
str(k2)
k2$variable<- gsub("nm","", paste(k2$variable))
str(str)
str(k2)
k2$variable <- as.numeric(k2$variable)
ggplot(data = k2, aes(variable,value,color=species)) + geom_point()
View(k2)
####script to create light data for Ph.D.
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
setwd("~/Documents/GitHub/Coexistence-in-BC-Forests/Analyses/")
library(vegan)
library(tidyverse)
library(dbplyr)
library(tidyr)
library(reshape2)
library(data.table)
library(tibble)
library(dplyr)
library(ggplot2)
LiCordatafinal <- read_csv("input/LiCordatafinalpspspt.csv")
LiCordata_adult <- LiCordatafinal[LiCordatafinal$Species != 'AMBIENT',]
LiCordata_adult1 <- LiCordatafinal[LiCordatafinal$Species == 'AMBIENT',]
LiCordata_adult <- LiCordata_adult[,c(1:403,441,450)]
LiCordata_adult[, c(3:403)] <- sapply(LiCordata_adult[, c(3:403)], as.numeric)
LiCordata_adult1 <- LiCordata_adult1[,c(1:403,441,450)]
LiCordata_adult1[, c(3:403)] <- sapply(LiCordata_adult1[, c(3:403)], as.numeric)
LiCordata_adult <- LiCordata_adult[order(LiCordata_adult$Time),]
#makes rowsname species names
rownames(LiCordata_adult) <- make.names(LiCordata_adult$Species, unique = TRUE)
#repeats each ambient reading three times in a new dataset
LiCordata_adult1 <- LiCordata_adult1 %>% slice(rep(1:n(), each = 3))
path <- unique(names(LiCordata_adult[,(3:403)]))
k2 <- (matrix(NA, nrow= nrow(LiCordata_adult[,(3:403)]), ncol = ncol(LiCordata_adult[,(3:403)])))
colnames(k2) <- colnames(LiCordata_adult[,(3:403)])
row.names(k2) <- rownames(LiCordata_adult)
for (n in 1:length(path)){
k2[,n]<- as.matrix(LiCordata_adult[,(3:403)][,n] - LiCordata_adult1[,(3:403)][,n])
}
k2 <- as.data.frame(k2)
k2 <- rownames_to_column(k2)
k2<- melt(k2[,c(1:402)], id.vars = c("rowname"))
View(k2)
k2$species<-sub("^([[:alpha:]]*).*", "\\1", k2$rowname)
k2 <- k2[,-1]
k2$variable<- gsub("nm","", paste(k2$variable))
k2$variable <- as.numeric(k2$variable)
k3 <- k2 %>%
group_by(variable,species) %>%
summarise(avg = mean(value))
ggplot(data = k3, aes(variable,avg,color=species)) + geom_point()
(help(priors, package = 'rstanarm'))
#Bayesian models for focal distance and impact
setwd("~/Documents/GitHub/Wine-Grape-Disease/analysis/output/") # setwd("~/Documents/git/projects/misc/darwin/winegrapedisease/Wine-Grape-Disease/analysis/output")
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
library(tidyverse)
library(dbplyr)
library(tidyr)
library(reshape2)
library(data.table)
library(tibble)
library(dplyr)
library(rstanarm)
library(loo)
library(shinystan)
#loading in datasets
focaldistance_onespecies <- read_csv("Focaldistanceonespecies.csv")
focaldistance_enitregenus <- read_csv("Focaldistanceentiregenus.csv")
calvin <- stan_glm(impact~ SES.FPD, data = focaldistance_enitregenus,
family = gaussian(link="identity"),)
summary(calvin)
fits <- calvin %>%
as_data_frame %>%
rename(intercept = `(Intercept)`) %>%
select(-sigma)
View(fits)
plot(impact ~ SES.FPD, data= focaldistance_enitregenus)
#stimulating predictions
SES.FPD_SEQ <- seq(from = -10, to = 2, by = 2)
impact_SEQ <- seq(from = 0, to = 100, by = 10)
y_calvin <- posterior_predict(calvin, newdata = data.frame(impact = impact_SEQ, SES.FPD= SES.FPD_SEQ))
#stimulating predictions
SES.FPD_SEQ <- seq(from = -10, to = 2, by = 2)
impact_SEQ <- seq(from = 0, to = 100, by = 20)
#stimulating predictions
SES.FPD_SEQ <- seq(from = -10, to = 2, by = 2)
impact_SEQ <- seq(from = 0, to = 100, by = 14.3)
y_calvin <- posterior_predict(calvin, newdata = data.frame(impact = impact_SEQ, SES.FPD= SES.FPD_SEQ))
